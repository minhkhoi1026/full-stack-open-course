{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","services/backend.js","App.js","index.js"],"names":["PersonForm","onSubmit","newName","onChangeName","newNumber","onChangeNumber","value","onChange","type","Filter","showName","handleShowChange","Persons","persons","query","onClickDeleteOf","filteredPersons","filter","person","name","toLowerCase","startsWith","map","number","onClick","id","Notification","message","className","includes","baseUrl","phoneBackEnd","getAll","axios","get","then","response","data","create","post","remove","delete","update","newObject","put","App","useState","setPersons","setNewName","setNewNumber","setShowName","notifMessage","setNotifMessage","useEffect","initialPersons","popupMessage","setTimeout","event","target","preventDefault","find","updateInfo","undefined","window","confirm","newPerson","receivedPerson","concat","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15bc7092.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({onSubmit, newName, onChangeName, newNumber, onChangeNumber}) => {\r\n    return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        Name: <input value={newName} onChange={onChangeName}/>\r\n      </div>\r\n      <div>\r\n        Number: <input value={newNumber} onChange={onChangeNumber}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({showName, handleShowChange}) => {\r\n    return (\r\n    <p>\r\n      Filter shown with <input value={showName} onChange={handleShowChange}/>\r\n    </p>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({persons, query, onClickDeleteOf}) => {\r\n  // only show filtered persons\r\n  const filteredPersons = persons.filter(\r\n    (person) => person.name.toLowerCase().startsWith(query.toLowerCase())\r\n  )\r\n\r\n  return (\r\n  <ul>\r\n    {filteredPersons.map( \r\n      person => <li key={person.id}>\r\n        {person.name}: {person.number}\r\n        <button \r\n        value={person.name} \r\n        onClick={() => onClickDeleteOf(person.name)}>\r\n          delete\r\n        </button>\r\n      </li>\r\n    )}\r\n  </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n    <div className={message.includes('[ERROR]') ? \"error\" : \"notif\"}>\r\n        {message}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (person) => {\r\n    const request = axios.post(baseUrl, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst phoneBackEnd = {getAll, create, remove, update}\r\nexport default phoneBackEnd","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport phoneBackEnd from './services/backend'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showName, setShowName] = useState('')\n  const [ notifMessage, setNotifMessage] = useState(null)\n\n  // fetch data from server\n  const data_hook = () => {\n    phoneBackEnd\n    .getAll()\n    .then((initialPersons) => {\n      setPersons(initialPersons)\n    })\n  }\n  useEffect(data_hook, [])\n\n  // function to pop up message\n  const popupMessage = (message) => {\n    setNotifMessage(message)\n    setTimeout(() => {\n      setNotifMessage(null)\n    }, 5000);\n  }\n\n  // function to handle change on input\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleShowChange = (event) => {\n    setShowName(event.target.value)\n  }\n\n  // event handler for click delete button\n  const onClickDeleteOf = (name) => {\n    const isConfirmed = window.confirm(`Delete ${name}?`)\n    if (isConfirmed) {\n      const person = persons.find(person => (person.name === name))\n      phoneBackEnd.remove(person.id)\n      .then(\n        () => {\n          setPersons(persons.filter(person => person.name !== name))\n          popupMessage(`[SUCCESS] Deleted information of ${name}`)\n        }\n      )\n      .catch(\n        () => {\n          popupMessage(`[ERROR] Information of ${name} has already been removed from server`)\n          setPersons(persons.filter(person => person.name !== name))\n        }\n      )\n    }\n  }\n\n  // function add new name into @persons list\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n    const updateInfo = () => {\n      setNewName('')\n      setNewNumber('')\n    }\n\n    // if person name already in then alert user, if they want change number to a new one\n    if (person !== undefined) {\n      const isConfirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with the new one`)\n      if (isConfirmed) {\n        const id = person.id\n        const newPerson = {...person, number: newNumber}\n\n        phoneBackEnd\n        .update(id, newPerson)\n        .then(receivedPerson => {\n          setPersons(persons.map(\n            person => (person.id === id ? receivedPerson : person))\n          )\n          updateInfo()\n          popupMessage(`[SUCCESS] Changed number of ${receivedPerson.name}`)\n        })\n      }\n    }\n    else {\n    // otherwise create a person and add his/her to persons list\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    \n    phoneBackEnd\n    .create(newPerson)\n    .then( \n      (receivedPerson) => {\n        setPersons(persons.concat(receivedPerson))\n        updateInfo()\n        popupMessage(`[SUCCESS] Added number of ${receivedPerson.name}`)\n    })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notifMessage}/>\n\n      <Filter\n      showName={showName}\n      handleShowChange={handleShowChange}\n      />\n\n      <h3>Add new person</h3>\n      <PersonForm \n      onSubmit={addPerson} \n      newName={newName} onChangeName={handleNameChange}\n      newNumber={newNumber} onChangeNumber={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons \n      persons={persons} \n      onClickDeleteOf={onClickDeleteOf}\n      query={showName}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}